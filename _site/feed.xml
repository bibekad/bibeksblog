<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-03-05T11:47:00+05:45</updated><id>http://localhost:4000/</id><title type="html">Bibek Adhikari</title><entry><title type="html">Free blogger - 1</title><link href="http://localhost:4000/posts/free-blogger/" rel="alternate" type="text/html" title="Free blogger - 1" /><published>2017-03-05T00:15:00+05:45</published><updated>2017-03-05T00:15:00+05:45</updated><id>http://localhost:4000/posts/Free-blogger</id><content type="html" xml:base="http://localhost:4000/posts/free-blogger/">&lt;p&gt;It was back in 2012, when I made my first blog, That was a blog hosted in &lt;a href=&quot;http://wordpress.com&quot;&gt;wordpress(dot)com&lt;/a&gt;, then about a year later, in 2013, I deleted that blog and made another one in &lt;a href=&quot;http://blogspot.com&quot;&gt;blogspot&lt;/a&gt;, then nex year I went to live in a hostel where using internet was not allowed. Then when I got back, I again deleted my blog. Then when I completed my school level, I had no work to do, until my highschool starts, which had a gap of three months. Then I started to discover internet, then I found about a website &lt;a href=&quot;dot.tk&quot;&gt;dot(dot)tk&lt;/a&gt; which gave free dot tk domains. Then in 2014 I made my blog &lt;a href=&quot;/&quot;&gt;bibekadhikari.tk&lt;/a&gt;. Which I used to maintain by blogger. Between these periods, I had already learnt &lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;CSS&lt;/code&gt;, then being unable to use what I had learnt on blogger, I deleted that blog again. Then I searched for free web hosting sites. I hosted throuh many sites, the first was &lt;a href=&quot;http://1freehosting.com&quot;&gt;1freehosting&lt;/a&gt;, then I went through &lt;a href=&quot;http://000webhost.com&quot;&gt;000webhost&lt;/a&gt;, then others, there I made a blog using only html and css, then as soon as my blog started to get some visitiors, even 100 a day, that made my blog crash atleast trice for every 10 times. Then I installed &lt;a href=&quot;http://wordpress.com&quot;&gt;wordpress&lt;/a&gt; in my website, that made the website lag even more, it was next to impossible to read two pages consecutively without being told server has crashed once. Then I had a visti of one hosting to other, exploring one after another. Every free hosting provider had atleast one problem. Either it be speed, bandwidth, space, or anything. Something always made a problem. Then back in 2016 being frustrated, I again deleted my blog. I was in a problem regarding my blog. I have deleted my blog more than 10 times. Deleted almost 100 posts and for nothing. Then I heard about jekyll, I really wanted to write blog again, make designs again, I explored &lt;a href=&quot;http://github.com&quot;&gt;github&lt;/a&gt;, read posts, written posts, made designs and reopened my blog. And what have i spend 0$. For my blog, I’ve never spent even a cent. If I do not count the internet pack, that I was using for writing my blog, I am not counting it because even if I had a paid hosting, I had to spent additional money for writing posts using my internet packs. If you also want to make a blog, just for writing, spent no money, as you can do it all for free. But if you have a mentality of earning money by writing blog. Then I recommend you to get a commercial domain, spend a few bucks to get your domain and hosting, perhaps you get free domain with your paid hosting. But if you possibly want a free domain, then you can go to &lt;a href=&quot;http://freenom.com&quot;&gt;freenom&lt;/a&gt;
&lt;img src=&quot;/img/freenom1.png&quot; alt=&quot;Freenom1&quot; /&gt;
&lt;img src=&quot;/img/freenom2.png&quot; alt=&quot;Freenom2&quot; /&gt;
&lt;img src=&quot;/img/freenom3.png&quot; alt=&quot;Freenom3&quot; /&gt;
&lt;img src=&quot;/img/freenom4.png&quot; alt=&quot;Freenom4&quot; /&gt;
Now you can register like you do for any social network and you new free domain is up and running.&lt;/p&gt;</content><author><name></name></author><summary type="html">It was back in 2012, when I made my first blog, That was a blog hosted in wordpress(dot)com, then about a year later, in 2013, I deleted that blog and made another one in blogspot, then nex year I went to live in a hostel where using internet was not allowed. Then when I got back, I again deleted my blog. Then when I completed my school level, I had no work to do, until my highschool starts, which had a gap of three months. Then I started to discover internet, then I found about a website dot(dot)tk which gave free dot tk domains. Then in 2014 I made my blog bibekadhikari.tk. Which I used to maintain by blogger. Between these periods, I had already learnt HTML and CSS, then being unable to use what I had learnt on blogger, I deleted that blog again. Then I searched for free web hosting sites. I hosted throuh many sites, the first was 1freehosting, then I went through 000webhost, then others, there I made a blog using only html and css, then as soon as my blog started to get some visitiors, even 100 a day, that made my blog crash atleast trice for every 10 times. Then I installed wordpress in my website, that made the website lag even more, it was next to impossible to read two pages consecutively without being told server has crashed once. Then I had a visti of one hosting to other, exploring one after another. Every free hosting provider had atleast one problem. Either it be speed, bandwidth, space, or anything. Something always made a problem. Then back in 2016 being frustrated, I again deleted my blog. I was in a problem regarding my blog. I have deleted my blog more than 10 times. Deleted almost 100 posts and for nothing. Then I heard about jekyll, I really wanted to write blog again, make designs again, I explored github, read posts, written posts, made designs and reopened my blog. And what have i spend 0$. For my blog, I’ve never spent even a cent. If I do not count the internet pack, that I was using for writing my blog, I am not counting it because even if I had a paid hosting, I had to spent additional money for writing posts using my internet packs. If you also want to make a blog, just for writing, spent no money, as you can do it all for free. But if you have a mentality of earning money by writing blog. Then I recommend you to get a commercial domain, spend a few bucks to get your domain and hosting, perhaps you get free domain with your paid hosting. But if you possibly want a free domain, then you can go to freenom Now you can register like you do for any social network and you new free domain is up and running.</summary></entry><entry><title type="html">Travel Infographic</title><link href="http://localhost:4000/posts/travel-blogger/" rel="alternate" type="text/html" title="Travel Infographic" /><published>2017-03-04T00:15:00+05:45</published><updated>2017-03-04T00:15:00+05:45</updated><id>http://localhost:4000/posts/Travel-Blogger</id><content type="html" xml:base="http://localhost:4000/posts/travel-blogger/">&lt;p&gt;This is an infographic profile of the modern Travel Blogger by &lt;a href=&quot;http://visual.ly/profile-modern-travel-blogger&quot;&gt;visually&lt;/a&gt;. In this infographic you can see how a travel blogger sets up profile
&lt;a href=&quot;http://thumbnails-visually.netdna-ssl.com/profile-of-the-modern-travel-blogger_524d85e27fc75.jpg&quot;&gt;&lt;img class=&quot;visually_embed_infographic&quot; src=&quot;http://visual.ly/node/image/88807?_w=548&quot; alt=&quot;Profile of the Modern Travel Blogger&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">This is an infographic profile of the modern Travel Blogger by visually. In this infographic you can see how a travel blogger sets up profile</summary></entry><entry><title type="html">Blogspot vs Wordpress.org</title><link href="http://localhost:4000/posts/blogspot-vs-wordpress" rel="alternate" type="text/html" title="Blogspot vs Wordpress.org" /><published>2017-03-03T00:15:00+05:45</published><updated>2017-03-03T00:15:00+05:45</updated><id>http://localhost:4000/posts/Blogger-vs-wordpress</id><content type="html" xml:base="http://localhost:4000/posts/blogspot-vs-wordpress">&lt;p&gt;Although its a personal referece which platform to use, and both of them have their cons and pros, leaving a result, that neither of the two is better than the other one. This infographic from &lt;a href=&quot;http://visual.ly/wordpress-vs-blogger&quot;&gt;visually&lt;/a&gt; gives good reason to use both, have a view on the infographic and you can always decide which one to use.
&lt;a href=&quot;http://thumbnails-visually.netdna-ssl.com/wordpress-vs-blogger_50290d197aa8f.jpg&quot;&gt;&lt;img class=&quot;visually_embed_infographic&quot; src=&quot;http://visual.ly/node/image/11385?_w=540&quot; alt=&quot;WordPressvs.Blogger&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Although its a personal referece which platform to use, and both of them have their cons and pros, leaving a result, that neither of the two is better than the other one. This infographic from visually gives good reason to use both, have a view on the infographic and you can always decide which one to use.</summary></entry><entry><title type="html">Starting Jekyll</title><link href="http://localhost:4000/posts/starting-jekyll" rel="alternate" type="text/html" title="Starting Jekyll" /><published>2017-03-02T00:15:00+05:45</published><updated>2017-03-02T00:15:00+05:45</updated><id>http://localhost:4000/posts/Starting-Jekyll</id><content type="html" xml:base="http://localhost:4000/posts/starting-jekyll">&lt;p&gt;I have finally transfered my &lt;a href=&quot;/&quot;&gt;blog&lt;/a&gt; to Jekyll, for someone like me, who likes things free rather than paid, Using Jekyll to make my blog has been blessing. As you can see I am using a free web domain &lt;a href=&quot;http://dot.tk&quot;&gt;dot tk&lt;/a&gt; made using website &lt;a href=&quot;http://freenom.com&quot;&gt;freenom&lt;/a&gt;, making a stable website has always been a trouble. There are many free hosting sites like &lt;a href=&quot;http://000webhost.com&quot;&gt;000webhost&lt;/a&gt; or &lt;a href=&quot;http://1freehosting.com&quot;&gt;1freehosting&lt;/a&gt; but they are not upto mark. For free there is not much to complain, but my website had its server crashed like &lt;strong&gt;4 times in every 10 times&lt;/strong&gt;. People also asked me, why did not I use websites like &lt;a href=&quot;http://blogspot.com&quot;&gt;blogspot&lt;/a&gt; or &lt;a href=&quot;http://wix.com&quot;&gt;wix&lt;/a&gt; to run my blog. Yes, while using blogspot or wix or yola or such other websites the blog never crashed. And I used it much time ago, but there was some other problem, like, while using blogspt to make my blog, I found it very hard to edit the layouts and ther was not much freedom to choose how my blog looks like. The only template that I ever liked in blogspot was dynamic template, but choosing dynamic template made the website slower. Now coming to drag and drop design websites like wix or yola, there was always a limit till which I could use the facilities provided by them, as long as I wanted to do something, it was out of services provided to free account, and yes the website did not crash, but was almost always slow. Then I tried the &lt;strong&gt;Go Site&lt;/strong&gt; provided by freenom, that was a lot hard than wix or yola, or weebly. Yes I liked weebly, but it was almost not free, to give a website to my domain was not free, but I could use free subdomain provided by weebly which was actually good. Now lets talk about Go site, free - yes, fast - yes, good user interference - no. Now, my website is as stable as any other paid websites. This is due to hosting my website using &lt;a href=&quot;http://github.com&quot;&gt;github&lt;/a&gt;. Language used is jekyll. What I got using jekyll was freedom, the freedom to make my own layout, the freedom to edit anything I want using pre-loaded templates. Even writing content became fun. It was like I am the godfather of my website. But there are limitations of using Jekyll too. For me, as I got my domain from &lt;strong&gt;Freenom&lt;/strong&gt;, there was no C-panel. Using &lt;strong&gt;000webhost&lt;/strong&gt; and &lt;strong&gt;1freehosting&lt;/strong&gt;, I used to get free Cpanel, but since now I am not using any hosting site, I do not have any free C-panel. Setting up jekyll is not that hard, if you are using linux, or mac, but for windows, it is. You can also visit &lt;a href=&quot;http://pages.github.com&quot;&gt;Github Pages&lt;/a&gt; to see how is github setup in windows.Then you can visit a website &lt;a href=&quot;https://milanaryal.com/jekyll-on-windows/&quot;&gt;Milanaryal.com&lt;/a&gt; I found it usefull for windows users, to set up jekyll. But in linux it is very easy, you just have to open terminal, run a couple of commands and you are done, simple is that.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#--&amp;gt; To install jekyll&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#--&amp;gt; Now open directory where you want to save your blog&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blog&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After running above two codes, you will have a folder named blog on you terminal opened directory. Then you can open the folder.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serve&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;incremental&lt;/span&gt; 
&lt;span class=&quot;c1&quot;&gt;#--&amp;gt;//OR&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serve&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now you can make a blog out of it, and host it in github.&lt;/p&gt;</content><author><name></name></author><summary type="html">I have finally transfered my blog to Jekyll, for someone like me, who likes things free rather than paid, Using Jekyll to make my blog has been blessing. As you can see I am using a free web domain dot tk made using website freenom, making a stable website has always been a trouble. There are many free hosting sites like 000webhost or 1freehosting but they are not upto mark. For free there is not much to complain, but my website had its server crashed like 4 times in every 10 times. People also asked me, why did not I use websites like blogspot or wix to run my blog. Yes, while using blogspot or wix or yola or such other websites the blog never crashed. And I used it much time ago, but there was some other problem, like, while using blogspt to make my blog, I found it very hard to edit the layouts and ther was not much freedom to choose how my blog looks like. The only template that I ever liked in blogspot was dynamic template, but choosing dynamic template made the website slower. Now coming to drag and drop design websites like wix or yola, there was always a limit till which I could use the facilities provided by them, as long as I wanted to do something, it was out of services provided to free account, and yes the website did not crash, but was almost always slow. Then I tried the Go Site provided by freenom, that was a lot hard than wix or yola, or weebly. Yes I liked weebly, but it was almost not free, to give a website to my domain was not free, but I could use free subdomain provided by weebly which was actually good. Now lets talk about Go site, free - yes, fast - yes, good user interference - no. Now, my website is as stable as any other paid websites. This is due to hosting my website using github. Language used is jekyll. What I got using jekyll was freedom, the freedom to make my own layout, the freedom to edit anything I want using pre-loaded templates. Even writing content became fun. It was like I am the godfather of my website. But there are limitations of using Jekyll too. For me, as I got my domain from Freenom, there was no C-panel. Using 000webhost and 1freehosting, I used to get free Cpanel, but since now I am not using any hosting site, I do not have any free C-panel. Setting up jekyll is not that hard, if you are using linux, or mac, but for windows, it is. You can also visit Github Pages to see how is github setup in windows.Then you can visit a website Milanaryal.com I found it usefull for windows users, to set up jekyll. But in linux it is very easy, you just have to open terminal, run a couple of commands and you are done, simple is that. gem install jekyll bundler #--&amp;gt; To install jekyll #--&amp;gt; Now open directory where you want to save your blog jekyll new blog After running above two codes, you will have a folder named blog on you terminal opened directory. Then you can open the folder. jekyll serve --incremental #--&amp;gt;//OR jekyll serve Now you can make a blog out of it, and host it in github.</summary></entry><entry><title type="html">Hello World</title><link href="http://localhost:4000/posts/hello-world" rel="alternate" type="text/html" title="Hello World" /><published>2017-03-01T00:15:00+05:45</published><updated>2017-03-01T00:15:00+05:45</updated><id>http://localhost:4000/posts/Hello-World</id><content type="html" xml:base="http://localhost:4000/posts/hello-world">&lt;p&gt;Have you ever wondered how many &lt;strong&gt;&lt;em&gt;languages&lt;/em&gt;&lt;/strong&gt; are there in which you can actually display anything in your browser. If you have ever searched about &lt;strong&gt;&lt;em&gt;languages&lt;/em&gt;&lt;/strong&gt; used for making websites, you know there are many &lt;strong&gt;&lt;em&gt;languages&lt;/em&gt;&lt;/strong&gt;, &lt;em&gt;frontend&lt;/em&gt;, &lt;em&gt;backend&lt;/em&gt;, lets not go in all those. In this article I am writing about the types by which you can write &lt;code class=&quot;highlighter-rouge&quot;&gt;Hello World&lt;/code&gt; in browser. If we start writing all, it would be like a day just to read all those, but I will be writing the most popular ones.&lt;br /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; HTML&lt;/li&gt;
Even if you do not know anything about making websites, then also you must have known about HTML, and how to write Hello World in it, you just have to simply type hello world in a .html extension file, save it and run it in a browser. There is no need of applying any code in html to write anhything.&lt;br /&gt;
&lt;li&gt; Javascript&lt;/li&gt;
JavaScript is the one of the most popular way of making a dynamic website. We can write Hello World in two different ways, 1st to write something in document, and next to write something in a alert box.
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;!--&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;li&gt; Java&lt;/li&gt;
Java is yet another highly popular and widely used language that you can consider for web development. This language is an object-oriented, class-based and concurrent language. Although I have not used much programming languages to write in browser. But writing Hello World is not a big problem.

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;printIn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;li&gt; Python &lt;/li&gt;
Python is a highly used and all-purpose programming language which is dynamic in nature. Being dynamic in nature means that you as a developer can write and run the code without the need of a compiler.

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;li&gt;PHP&lt;/li&gt;
PHP is a Hypertext Processor, PHP is the most commonly used programming language for making websites. Even websites like facebook, wordpress, and Digg were made using PHP, to print Hello World in php we have two methods, echo and print

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;php&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;sc&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;li&gt;Ruby&lt;/li&gt;
I have not understood much about Ruby, but I know it can be used as a language to make websites, and program its function. But as i said earlier, printing Hello World is not a big problem for any of the language.

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello World&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;li&gt;C++&lt;/li&gt;
C++ is a console level language, the first object oriented language. To understand further languages, knowing C++ is a very important thing as per my teacher,lets print Hello World in C++

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;li&gt;C Language&lt;/li&gt;
C is subject oriented language. It is one of the most basic languages. It offers building elements for other languages like C++, Python, Java and others. Printing hello world in C is ont of the simplest things that you will ever do.

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;/ol&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Programming&lt;/code&gt; languages like C, C++ and some other require header files, without which the print statement does not work. So before trying any of them, we should check what header files are required and how to print them in our browser.&lt;/p&gt;</content><author><name></name></author><summary type="html">Have you ever wondered how many languages are there in which you can actually display anything in your browser. If you have ever searched about languages used for making websites, you know there are many languages, frontend, backend, lets not go in all those. In this article I am writing about the types by which you can write Hello World in browser. If we start writing all, it would be like a day just to read all those, but I will be writing the most popular ones. HTML Even if you do not know anything about making websites, then also you must have known about HTML, and how to write Hello World in it, you just have to simply type hello world in a .html extension file, save it and run it in a browser. There is no need of applying any code in html to write anhything. Javascript JavaScript is the one of the most popular way of making a dynamic website. We can write Hello World in two different ways, 1st to write something in document, and next to write something in a alert box. &amp;lt;!-- document.write(&quot;Hello World&quot;); alert(&quot;Hello World&quot;); !--&amp;gt; Java Java is yet another highly popular and widely used language that you can consider for web development. This language is an object-oriented, class-based and concurrent language. Although I have not used much programming languages to write in browser. But writing Hello World is not a big problem. System.out.printIn(&quot;Hello World!&quot;); Python Python is a highly used and all-purpose programming language which is dynamic in nature. Being dynamic in nature means that you as a developer can write and run the code without the need of a compiler. print (&quot;Hello World&quot;); PHP PHP is a Hypertext Processor, PHP is the most commonly used programming language for making websites. Even websites like facebook, wordpress, and Digg were made using PHP, to print Hello World in php we have two methods, echo and print &amp;lt;?php print &quot;Hello World&quot;; echo &quot;Hello World&quot;; ?&amp;gt; Ruby I have not understood much about Ruby, but I know it can be used as a language to make websites, and program its function. But as i said earlier, printing Hello World is not a big problem for any of the language. print &quot;Hello World\n&quot; C++ C++ is a console level language, the first object oriented language. To understand further languages, knowing C++ is a very important thing as per my teacher,lets print Hello World in C++ cout&amp;lt;&amp;lt;&quot;Hello World&quot;&amp;lt;&amp;lt;endl; C Language C is subject oriented language. It is one of the most basic languages. It offers building elements for other languages like C++, Python, Java and others. Printing hello world in C is ont of the simplest things that you will ever do. printf(&quot;Hello World!&quot;); Programming languages like C, C++ and some other require header files, without which the print statement does not work. So before trying any of them, we should check what header files are required and how to print them in our browser.</summary></entry><entry><title type="html">C tutorial-5:Loop</title><link href="http://localhost:4000/posts/c-tutorial-5" rel="alternate" type="text/html" title="C tutorial-5:Loop" /><published>2017-02-01T08:38:17+05:45</published><updated>2017-02-01T08:38:17+05:45</updated><id>http://localhost:4000/posts/C-programming-5</id><content type="html" xml:base="http://localhost:4000/posts/c-tutorial-5">&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;loops&lt;/code&gt; you will find many loops on other programs if you watch any, now how to apply &lt;code class=&quot;highlighter-rouge&quot;&gt;loops&lt;/code&gt;, there are three methods, the &lt;code class=&quot;highlighter-rouge&quot;&gt;while loop&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;the do while loop&lt;/code&gt;, the &lt;code class=&quot;highlighter-rouge&quot;&gt;for loop&lt;/code&gt;. Now lets see how they are used and why&lt;br /&gt;
while(comdition){&lt;br /&gt;
  statements;
}
&lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt; loop will looks for condition, if condition is true, then it will run until the condition gets false.&lt;br /&gt;
do(condition){&lt;br /&gt;
  statements;
}
‘do while’ loop is similar to while loop, the only difference is that, in &lt;code class=&quot;highlighter-rouge&quot;&gt;do while&lt;/code&gt; loop the loop runs for once then it checks for the condition.&lt;br /&gt;
for(initialization;condition;updation)
{
  statements;
}
&lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt;loop is the most used loop, and as easy to understand as other loops.&lt;br /&gt;
Lets print a number twice using for loop
for input a=10&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;scanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%d/n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Output:&lt;/p&gt;
&lt;blockquote&gt;
10&lt;br /&gt;
10&lt;br /&gt;
10&lt;br /&gt;
&lt;/blockquote&gt;</content><author><name></name></author><summary type="html">loops you will find many loops on other programs if you watch any, now how to apply loops, there are three methods, the while loop, the do while loop, the for loop. Now lets see how they are used and why while(comdition){ statements; } while loop will looks for condition, if condition is true, then it will run until the condition gets false. do(condition){ statements; } ‘do while’ loop is similar to while loop, the only difference is that, in do while loop the loop runs for once then it checks for the condition. for(initialization;condition;updation) { statements; } forloop is the most used loop, and as easy to understand as other loops. Lets print a number twice using for loop for input a=10 int a; scanf(&quot;%d&quot;,&amp;amp;a); for(int i=0;i&amp;lt;2;i++) { printf(&quot;%d/n&quot;,a); } Output: 10 10 10</summary></entry><entry><title type="html">HTML-4:Making Header</title><link href="http://localhost:4000/posts/html-4" rel="alternate" type="text/html" title="HTML-4:Making Header" /><published>2017-01-30T09:38:17+05:45</published><updated>2017-01-30T09:38:17+05:45</updated><id>http://localhost:4000/posts/html-4</id><content type="html" xml:base="http://localhost:4000/posts/html-4">&lt;p&gt;In the &lt;code class=&quot;highlighter-rouge&quot;&gt;header&lt;/code&gt; we have made contains two &lt;code class=&quot;highlighter-rouge&quot;&gt;nav&lt;/code&gt;s &lt;code class=&quot;highlighter-rouge&quot;&gt;navleft&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;navright&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;navleft&lt;/code&gt; will contain the heading of blog, while &lt;code class=&quot;highlighter-rouge&quot;&gt;navright&lt;/code&gt; will contain the menu of the blog.
Now let’s continue editing the previous blog&lt;/p&gt;
&lt;h3&gt; HTML &lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;header&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nav&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;navleft&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;My&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Blog&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/nav&amp;gt;
&amp;lt;nav class=&quot;navright&quot;&amp;gt;
&amp;lt;li&amp;gt;Home&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;About&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/li&amp;gt;
&amp;lt;li&amp;gt;Contact&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Write&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/li&amp;gt;
&amp;lt;/n&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;av&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/header&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Output:&lt;/p&gt;
&lt;blockquote&gt;
&lt;br /&gt;
&lt;header class=&quot;header1&quot;&gt;
&lt;nav class=&quot;navleft1&quot;&gt;
My Blog
&lt;/nav&gt;
&lt;nav class=&quot;navright1&quot;&gt;
&lt;li&gt;Home&lt;/li&gt;
&lt;li&gt;About&lt;/li&gt;
&lt;li&gt;Contact&lt;/li&gt;
&lt;li&gt;Write for us&lt;/li&gt;
&lt;/nav&gt;
&lt;/header&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br /&gt;
Now let’s style our &lt;code class=&quot;highlighter-rouge&quot;&gt;navbar&lt;/code&gt;&lt;br /&gt;
Make &lt;code class=&quot;highlighter-rouge&quot;&gt;main.css&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nav&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;navleft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;navright&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;width: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;navright&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:inline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Output:&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;header class=&quot;header2&quot;&gt;
&lt;nav class=&quot;navleft2&quot;&gt;
My Blog
&lt;/nav&gt;
&lt;nav class=&quot;navright2&quot;&gt;
&lt;li&gt;Home&lt;/li&gt;
&lt;li&gt;About&lt;/li&gt;
&lt;li&gt;Contact&lt;/li&gt;
&lt;li&gt;Write for us&lt;/li&gt;
&lt;/nav&gt;
&lt;/header&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;style&gt;
.hearder2{
margin:20px;  
}
.header2 nav{
  float:left;
}
.navleft2{
  width:30%;  
}
.navright2{
width: 70%;
}
.navright2 li{
  display:inline-block;
  padding-left: 5px;
  padding-right: 5px;
  text-align:right;
}
&lt;/style&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If you like you can also add fancy things like fa fa-icons, or change the font&lt;/p&gt;</content><author><name></name></author><summary type="html">In the header we have made contains two navs navleft and navright. navleft will contain the heading of blog, while navright will contain the menu of the blog. Now let’s continue editing the previous blog HTML &amp;lt;header class=&quot;header&quot;&amp;gt; &amp;lt;nav class=&quot;navleft&quot;&amp;gt; My Blog &amp;lt;/nav&amp;gt; &amp;lt;nav class=&quot;navright&quot;&amp;gt; &amp;lt;li&amp;gt;Home&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;About&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Contact&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Write for us&amp;lt;/li&amp;gt; &amp;lt;/nav&amp;gt; &amp;lt;/header&amp;gt; Output: My Blog Home About Contact Write for us Now let’s style our navbar Make main.css .header nav{ float:left; } .navleft{ width:30%; } .navright{ width: 60%; } .navright li{ display:inline-block; } Output: My Blog Home About Contact Write for us</summary></entry><entry><title type="html">C tutorial-4:Algebra</title><link href="http://localhost:4000/posts/c-tutorial-4" rel="alternate" type="text/html" title="C tutorial-4:Algebra" /><published>2017-01-30T09:38:17+05:45</published><updated>2017-01-30T09:38:17+05:45</updated><id>http://localhost:4000/posts/C-programming-4</id><content type="html" xml:base="http://localhost:4000/posts/c-tutorial-4">&lt;p&gt;Now let’s begin again. Now we are going to look towards algerbra like &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;. To start with lets initialize two variables ‘a’ and ‘b’&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Or we can also use float&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The only problem that I feel from float is that it gives .00 even for normal integers.&lt;br /&gt;
Now lets ask user for the value of ‘a’ and ‘b’&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#=&amp;gt;For Int&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;scanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%d %d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt;For Float&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;scanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%f %f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now let us initialize outputs&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Lets start Processing&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;subs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now let us print the outputs&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#=&amp;gt;For int&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt;For float&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%f&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%f&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%f&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Lets see what do we get as a output considering inputs as a=20 and b=40&lt;/p&gt;
&lt;blockquote&gt;
20&lt;br /&gt;
40&lt;br /&gt;
#=&amp;gt;For int&lt;br /&gt;
60&lt;br /&gt;
-20&lt;br /&gt;
800&lt;br /&gt;
0&lt;br /&gt;
#=&amp;gt;For float&lt;br /&gt;
60.00&lt;br /&gt;
-20.00&lt;br /&gt;
800.00&lt;br /&gt;
0.50&lt;br /&gt;
&lt;/blockquote&gt;
&lt;p&gt;Some compiler might give garbage value to subs and div while using int&lt;br /&gt;
Unlike our normal airthemetics there is a sign &lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt; used for arithmetic in &lt;code class=&quot;highlighter-rouge&quot;&gt;C programming&lt;/code&gt;, let’s see what it does&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let’s see its output&lt;br /&gt;
Output:&lt;/p&gt;
&lt;blockquote&gt;
1
&lt;/blockquote&gt;
&lt;p&gt;Now how does this one come and what does &lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt; do?. Let’s see if we divide 10 by 3 then &lt;code class=&quot;highlighter-rouge&quot;&gt;3*3=9&lt;/code&gt; with remainder 1. This is what &lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt; does, it finds our remainder when a number is divided by another number.&lt;/p&gt;</content><author><name></name></author><summary type="html">Now let’s begin again. Now we are going to look towards algerbra like +,-,*,/. To start with lets initialize two variables ‘a’ and ‘b’ int a; int b; Or we can also use float float a; float b; The only problem that I feel from float is that it gives .00 even for normal integers. Now lets ask user for the value of ‘a’ and ‘b’ #=&amp;gt;For Int scanf(&quot;%d %d&quot;,&amp;amp;a,&amp;amp;b); #=&amp;gt;For Float scanf(&quot;%f %f&quot;,&amp;amp;a,&amp;amp;b); Now let us initialize outputs int sum,subs,mul,div; Lets start Processing sum=a+b; subs=a-b; mul=a*b; div=a/b; Now let us print the outputs #=&amp;gt;For int printf(&quot;%d\n&quot;,sum); printf(&quot;%d\n&quot;,subs); printf(&quot;%d\n&quot;,mul); printf(&quot;%d&quot;\n,div); #=&amp;gt;For float printf(&quot;%f\n&quot;,sum); printf(&quot;%f\n&quot;,subs); printf(&quot;%f\n&quot;,mul); printf(&quot;%f&quot;\n,div); Lets see what do we get as a output considering inputs as a=20 and b=40 20 40 #=&amp;gt;For int 60 -20 800 0 #=&amp;gt;For float 60.00 -20.00 800.00 0.50 Some compiler might give garbage value to subs and div while using int Unlike our normal airthemetics there is a sign % used for arithmetic in C programming, let’s see what it does int a=10; int b=3; int out; out=a%b; printf(&quot;%d&quot;,out); Let’s see its output Output: 1 Now how does this one come and what does % do?. Let’s see if we divide 10 by 3 then 3*3=9 with remainder 1. This is what % does, it finds our remainder when a number is divided by another number.</summary></entry><entry><title type="html">HTML-3:Adding Class</title><link href="http://localhost:4000/posts/html-3" rel="alternate" type="text/html" title="HTML-3:Adding Class" /><published>2017-01-29T09:38:17+05:45</published><updated>2017-01-29T09:38:17+05:45</updated><id>http://localhost:4000/posts/html-3</id><content type="html" xml:base="http://localhost:4000/posts/html-3">&lt;p&gt;To add classes, we have to consider standards like &lt;code class=&quot;highlighter-rouge&quot;&gt;.header&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;header&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;.section&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;section&amp;gt;&lt;/code&gt;….&lt;/p&gt;
&lt;h3&gt; HTML &lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Web&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/title&amp;gt;
&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;main.css&quot;&amp;gt;
&amp;lt;link rel=&quot;short icon&quot; type=&quot;xicon&quot; href=&quot;favicon.ico&quot;&amp;gt;
&amp;lt;!--We will make main.css later--&amp;gt;
&amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;header&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nav&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;navleft&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/nav&amp;gt;
&amp;lt;nav class=&quot;navright&quot;&amp;gt;
&amp;lt;/n&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;av&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/header&amp;gt;
&amp;lt;section class=&quot;section&quot;&amp;gt;
&amp;lt;article class=&quot;article&quot;&amp;gt;
&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;article&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/article&amp;gt;
&amp;lt;article class=&quot;article&quot;&amp;gt;
&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/section&amp;gt;
&amp;lt;footer class=&quot;footer&quot;&amp;gt;
&amp;lt;article class=&quot;footer-left&quot;&amp;gt;
&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;footer-right&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/article&amp;gt;
&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;footer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/body&amp;gt;
&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html">To add classes, we have to consider standards like .header for &amp;lt;header&amp;gt;, .section for &amp;lt;section&amp;gt;…. HTML &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt; Web Page &amp;lt;/title&amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;main.css&quot;&amp;gt; &amp;lt;link rel=&quot;short icon&quot; type=&quot;xicon&quot; href=&quot;favicon.ico&quot;&amp;gt; &amp;lt;!--We will make main.css later--&amp;gt; &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;header class=&quot;header&quot;&amp;gt; &amp;lt;nav class=&quot;navleft&quot;&amp;gt; &amp;lt;/nav&amp;gt; &amp;lt;nav class=&quot;navright&quot;&amp;gt; &amp;lt;/nav&amp;gt; &amp;lt;/header&amp;gt; &amp;lt;section class=&quot;section&quot;&amp;gt; &amp;lt;article class=&quot;article&quot;&amp;gt; &amp;lt;/article&amp;gt; &amp;lt;article class=&quot;article&quot;&amp;gt; &amp;lt;/article&amp;gt; &amp;lt;article class=&quot;article&quot;&amp;gt; &amp;lt;/article&amp;gt; &amp;lt;/section&amp;gt; &amp;lt;footer class=&quot;footer&quot;&amp;gt; &amp;lt;article class=&quot;footer-left&quot;&amp;gt; &amp;lt;/article&amp;gt; &amp;lt;article class=&quot;footer-right&quot;&amp;gt; &amp;lt;/article&amp;gt; &amp;lt;/footer&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;</summary></entry><entry><title type="html">C tutorial-3:Print variable</title><link href="http://localhost:4000/posts/c-tutorial-3" rel="alternate" type="text/html" title="C tutorial-3:Print variable" /><published>2017-01-29T09:38:17+05:45</published><updated>2017-01-29T09:38:17+05:45</updated><id>http://localhost:4000/posts/C-programming-3</id><content type="html" xml:base="http://localhost:4000/posts/c-tutorial-3">&lt;p&gt;Do you remember using &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt; variable and &lt;code class=&quot;highlighter-rouge&quot;&gt;scanf&lt;/code&gt; variable. If you do that’s what we need now.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;213&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you remember the initialiser for &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt; is &lt;code class=&quot;highlighter-rouge&quot;&gt;%d&lt;/code&gt;, char is &lt;code class=&quot;highlighter-rouge&quot;&gt;%c&lt;/code&gt; and float is &lt;code class=&quot;highlighter-rouge&quot;&gt;%d&lt;/code&gt; to print,&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%d %c %f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;here we do not need &amp;amp; infront of variable because &amp;amp; is used only while a value is to be stored from user i.e during &lt;code class=&quot;highlighter-rouge&quot;&gt;scanf&lt;/code&gt;&lt;br /&gt;
Output:&lt;/p&gt;
&lt;blockquote&gt;
10 a 1.213
&lt;/blockquote&gt;
&lt;p&gt;Now if you want them to print in different lines you can always use &lt;code class=&quot;highlighter-rouge&quot;&gt;/n&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%d /n %c /n %f /n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now the output will be&lt;br /&gt;
Output:&lt;/p&gt;
&lt;blockquote&gt;
10&lt;br /&gt;
a&lt;br /&gt;
1.213&lt;br /&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can also write &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt; itself on different lines but it will be of no work until you give &lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt; on each &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%c&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%c&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The output will have no change&lt;br /&gt;
Output:&lt;/p&gt;
&lt;blockquote&gt;
10&lt;br /&gt;
a&lt;br /&gt;
1.213&lt;br /&gt;
&lt;/blockquote&gt;</content><author><name></name></author><summary type="html">Do you remember using printf variable and scanf variable. If you do that’s what we need now. int a=10; char b=&quot;a&quot;; float c=1.213; If you remember the initialiser for int is %d, char is %c and float is %d to print, printf(&quot;%d %c %f&quot;,a,b,c); here we do not need &amp;amp; infront of variable because &amp;amp; is used only while a value is to be stored from user i.e during scanf Output: 10 a 1.213 Now if you want them to print in different lines you can always use /n printf(&quot;%d /n %c /n %f /n&quot;); Now the output will be Output: 10 a 1.213 You can also write printf itself on different lines but it will be of no work until you give \n on each printf printf(&quot;%d\n&quot;,a); printf(&quot;%c\n&quot;,b); printf(&quot;%c\n&quot;,c); The output will have no change Output: 10 a 1.213</summary></entry></feed>